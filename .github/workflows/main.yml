name: Deploy Docker Compose

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: self-hosted
    
    steps:
    - name: Code checkout
      uses: actions/checkout@v4
    
    - name: Create .env files
      run: |
        echo "DB_HOST=${{ secrets.DB_HOST }}" >> netbox.env
        echo "DB_NAME=${{ secrets.DB_NAME }}" >> netbox.env
        echo "DB_USER=${{ secrets.DB_USER }}" >> netbox.env
        echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> netbox.env
        echo "REDIS_CACHE_PASSWORD=${{ secrets.REDIS_CACHE_PASSWORD }}" >> netbox.env
        echo "REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}" >> netbox.env
        echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> netbox.env
        
        echo "POSTGRES_DB=${{ secrets.DB_NAME }}" >> postgres.env
        echo "POSTGRES_PASSWORD=${{ secrets.DB_PASSWORD }}" >> postgres.env
        echo "POSTGRES_USER=${{ secrets.DB_USER }}" >> postgres.env

        echo "REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}" >> redis-cache.env
        
        echo "REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}" >> redis.env

    
    - name: Stop and delete old containers
      run: |
        docker compose down --volumes --remove-orphans
      continue-on-error: true
    
    - name: Cleanup old images
      run: docker image prune -f
      continue-on-error: true
    
    - name: Build containers
      run: docker compose build --no-cache
    
    - name: Run containers
      run: docker compose up -d
    
    - name: Wait for initialization
      run: sleep 15
    
    - name: Health check
      run: |
        docker compose ps
        docker compose logs --tail=100
    
    - name: Connection test
      run: |
        curl -f http://localhost:8080/health || echo "Health check failed"
      continue-on-error: true
